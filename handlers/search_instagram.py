from aiogram.types.message import Message
from loader import dp
from aiogram import types
from filters.is_instagram_link import Is_Instagram_Link
import datetime
import asyncio
import random
import json
from keyboards import search_result_keyboard
from utils import instagram_parser
from base_lang import cheack_lang

@dp.message_handler(Is_Instagram_Link())
async def search_nstagram(message: types.Message):
    if cheack_lang(message.chat.id) == 'ru':
        username = message.text.split('instagram.com')[1].replace('/', '')
        username = username.replace('?utm_medium=copy_link', '')
        try:
            #photo = instagram_parser.get_profile_photo(username)
            start_date = datetime.date(2020, 1, 1)
            end_date = datetime.date(2020, 2, 1)
            time_between_dates = end_date - start_date
            days_between_dates = time_between_dates.days
            random_number_of_days = random.randrange(days_between_dates)
            random_date = start_date + datetime.timedelta(days=random_number_of_days)
            with open('data/prices.json') as json_file:
                        prices = json.load(json_file)
            loading = await message.answer('<b>–ò–¥—ë—Ç –ø–æ–∏—Å–∫... üîé</b>')
            await asyncio.sleep(2)
            await loading.edit_text('<b>–ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—à–∏ –≤–∑–ª–æ–º—ã... ‚ôªÔ∏è</b>')
            await asyncio.sleep(2)
            await loading.edit_text('<b>–ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—à–∏ —Å–ª–∏–≤—ã... ‚ôªÔ∏è</b>')
            await asyncio.sleep(2)
            await loading.delete()
            text = f'''<b>–í–∑–ª–æ–º –Ω–∞–π–¥–µ–Ω ‚úÖ</b>\n\n<b>–ù–∏–∫: </b>{username}\n<b>–î–∞—Ç–∞ –≤–∑–ª–æ–º–∞: </b>{random_date}\n<b>–ò–Ω—Ç–∏–º —Ñ–æ—Ç–æ: </b>–í –Ω–∞–ª–∏—á–∏–∏ ‚úÖ\n<b>–ò–Ω—Ç–∏–º –≤–∏–¥–µ–æ: </b>–í –Ω–∞–ª–∏—á–∏–∏ ‚úÖ'''
            text2 = f'''<b>{username}</b> | {prices["Archive"]} <b>üá∑üá∫ RUB</b>\n\n<b>üóÇ –ê—Ä—Ö–∏–≤ –≤–∑–ª–æ–º–∞–Ω–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã —É–∂–µ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω. –í—Å–µ –¥–∏–∞–ª–æ–≥–∏ –∏ –≤–ª–æ–∂–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≥–æ—Ç–æ–≤—ã –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ.</b>'''
            await message.answer(text)
            await message.answer(text2, reply_markup=search_result_keyboard.keyboard)
        except:
            await message.answer('<b>‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É...</b>')

    else:
        username = message.text.split('instagram.com')[1].replace('/', '')
        username = username.replace('?utm_medium=copy_link', '')
        try:
            # photo = instagram_parser.get_profile_photo(username)
            start_date = datetime.date(2020, 1, 1)
            end_date = datetime.date(2020, 2, 1)
            time_between_dates = end_date - start_date
            days_between_dates = time_between_dates.days
            random_number_of_days = random.randrange(days_between_dates)
            random_date = start_date + datetime.timedelta(days=random_number_of_days)
            with open('data/prices.json') as json_file:
                prices = json.load(json_file)
            loading = await message.answer('<b>A search is underway... üîé</b>')
            await asyncio.sleep(2)
            await loading.edit_text('<b>Checking our hacks... ‚ôªÔ∏è</b>')
            await asyncio.sleep(2)
            await loading.edit_text('<b>Checking our plums... ‚ôªÔ∏è</b>')
            await asyncio.sleep(2)
            await loading.delete()
            text = f'''<b>Hacking found ‚úÖ</b>\n\n<b>Nick: </b>{username}\n<b>Date of hacking: </b>{random_date}\n<b>Intimate photos: </b>In stock ‚úÖ\n<b>Sex videos: </b>In stock ‚úÖ'''
            text2 = f'''<b>{username}</b> |<b>25.00 üíµUSD</b>\n\n<b>üóÇThe archive of the hacked page has already been formed. All dialogs and page attachments are ready to be sent.</b>'''
            await message.answer(text)
            await message.answer(text2, reply_markup=search_result_keyboard.keyboard_eng)
        except:
            await message.answer('<b>‚ùå An error has occurred, check the link to the page...</b>')
